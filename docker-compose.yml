version: "3.8"
services:
    backend:
        build:
            context: .
            dockerfile: Dockerfile
        environment:
            DB_USER: ${DB_USER}
            DB_SERVER: ${DB_SERVER}
            DEV_DB_SERVER: ${DEV_DB_SERVER}
            TEST_DB_SERVER: ${TEST_DB_SERVER}
            DB_NAME: ${DB_NAME}
            DB_PASSWORD: ${DB_PASSWORD}
            FLASK_ENV: ${FLASK_ENV}
            DEBUG: ${DEBUG}
            KEYCLOAK_CLIENT_ID: ${KEYCLOAK_CLIENT_ID}
            KEYCLOAK_CLIENT_SECRET: ${KEYCLOAK_CLIENT_SECRET}
            KEYCLOAK_URI: ${KEYCLOAK_URI}
            KEYCLOAK_REALM: ${KEYCLOAK_REALM}
            KEYCLOAK_ADMIN_USER: ${KEYCLOAK_ADMIN_USER}
            KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
            KAFKA_BOOTSTRAP_SERVERS: ${KAFKA_BOOTSTRAP_SERVERS}
            KAFKA_CONSUMER_GROUP_ID: ${KAFKA_CONSUMER_GROUP_ID}
            KAFKA_SUBSCRIPTIONS: ${KAFKA_SUBSCRIPTIONS}
            REDIS_SERVER: ${REDIS_SERVER}
            REDIS_PASSWORD: ${REDIS_PASSWORD}
        command: "flask run --host=0.0.0.0 --port=5000"
        ports:
            - 8000:5000
        networks:
            - frontend
            - backend
        volumes:
            - .:/app
        depends_on:
            - db
            - redis
    redis:
        image: "redis:4-alpine"
        command: redis-server --requirepass ${REDIS_PASSWORD}
        environment:
            - REDIS_REPLICATION_MODE=master
        networks:
            - backend
        ports:
            - "6379:6379"
    db:
        image: postgres
        volumes:
            - ./data/db:/var/lib/postgresql/data
        networks:
            - backend
        environment:
            - POSTGRES_DB=${DB_SERVER}
            - POSTGRES_USER=${DB_USER}
            - POSTGRES_PASSWORD=${DB_PASSWORD}

networks:
    frontend:
    backend:
